{"ast":null,"code":"var _jsxFileName = \"/Users/bhawesh/Desktop/01-starting-setup/src/components/screens/Home.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allPosts', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //    console.log(result)\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(result)\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: item.postedBy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"thumb_down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"thumb_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), item.comments.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"800\"\n                },\n                children: record.postedBy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 54\n              }, this), \" \", record.text]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              makeComment(e.target[0].value, item._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Home, \"kLS/0ojS7ut9bSkV1n2Vnvv0y/8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/bhawesh/Desktop/01-starting-setup/src/components/screens/Home.js"],"names":["react","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","console","log","posts","likePost","id","method","body","JSON","stringify","postId","newData","map","item","_id","catch","err","unlikePost","makeComment","text","postedBy","name","photo","likes","length","title","color","includes","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import react,{useState,useEffect,useContext} from \"react\"\nimport {UserContext} from '../../App'\nconst Home = () => {\n    const [data,setData] = useState([]);\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/allPosts',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            setData(result.posts)\n        })\n    },[])\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n                //    console.log(result)\n          const newData = data.map(item=>{\n              if(item._id==result._id){\n                  return result\n              }else{\n                  return item\n              }\n          })\n          setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n  }\n  const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n          const newData = data.map(item=>{\n              if(item._id==result._id){\n                  return result\n              }else{\n                  return item\n              }\n          })\n          setData(newData)\n        }).catch(err=>{\n          console.log(err)\n      })\n  }\n\n  const makeComment = (text,postId)=>{\n    fetch('/comment',{\n        method:\"put\",\n        headers:{\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n        },\n        body:JSON.stringify({\n            postId,\n            text\n        })\n    }).then(res=>res.json())\n    .then(result=>{\n        console.log(result)\n        const newData = data.map(item=>{\n          if(item._id==result._id){\n              return result\n          }else{\n              return item\n          }\n       })\n      setData(newData)\n    }).catch(err=>{\n        console.log(err)\n    })\n}\n    return(\n     <div className = \"home\">\n         {\n             data.map(item=>{\n                 return(\n                    <div className=\"card home-card\" key={item._id}>\n                    <h5>{item.postedBy.name}</h5>\n                    <div className=\"card-image\">\n                        <img src={item.photo} alt=\"\" />\n                    </div>\n                    <div className=\"card-content\">\n                        <h6>{item.likes.length} likes</h6>\n                        <h6>{item.title}</h6>\n                        <p>{item.body}</p>\n                        <i className=\"material-icons\" style={{color : \"red\"}}>favorite</i>\n                        {item.likes.includes(state._id)\n                            ? \n                             <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                              >thumb_down</i>\n                            : \n                            <i className=\"material-icons\"\n                            onClick={()=>{likePost(item._id)}}\n                            >thumb_up</i>\n                        }\n                        \n                        {\n                            item.comments.map(record=>{\n                                return(\n                                <h6 key={record._id}><span style={{fontWeight:\"800\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                )\n                            })\n                        }\n                        <form onSubmit={(e)=>{\n                            e.preventDefault()\n                            makeComment(e.target[0].value,item._id)\n                        }}>\n                            <input type=\"text\" placeholder=\"add a comment\" />  \n                        </form>\n                    </div>\n                 </div>\n                 )\n             })\n         }\n     \n    \n     </div>\n      \n     )\n }\n\n export default Home"]},"metadata":{},"sourceType":"module"}